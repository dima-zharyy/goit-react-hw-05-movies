{"version":3,"file":"static/js/691.1c1a140f.chunk.js","mappings":"wOAEaA,E,QAAYC,EAAAA,KAAH,qE,mBCITC,EAAS,WACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IAILG,EAAAA,EAAAA,IAAUH,GACPI,MAAK,SAAAC,GACJT,EAAUS,GACU,IAAhBA,EAAKC,SACPC,EAAAA,EAAAA,IAAO,gCAAD,OAAiCP,GAE1C,IACAQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACZ,IAWJ,OACE,UAACT,EAAD,YACE,SAAC,KAAD,CAAWsB,SAXM,SAAAb,GACnBD,EAAgB,CAAEC,MAAAA,IAElBc,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEb,IAKItB,EAAOW,OAAS,IAAK,SAAC,KAAD,CAAYX,OAAQA,MAG/C,C,4MCvCDuB,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,mCAEFC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,uCAA0CC,IADxC,cACnBE,EADmB,yBAElBA,EAAShB,MAFS,2CAAH,qDAKXF,EAAS,mCAAG,WAAMH,GAAN,uFACAkB,IAAAA,IAAA,gCACIC,EADJ,kBACoBnB,EADpB,+CADA,cACjBqB,EADiB,yBAIhBA,EAAShB,KAAKiB,SAJE,2CAAH,sDAOTC,EAAU,mCAAG,WAAMC,GAAN,mGACDN,IAAAA,IAAA,iBACXM,EADW,oBACGL,EADH,oBADC,cAClBE,EADkB,gBAILA,EAAShB,KAJJ,cAIlBA,EAJkB,OAKhBoB,EAAuDpB,EAAvDoB,MAAOC,EAAgDrB,EAAhDqB,SAAUC,EAAsCtB,EAAtCsB,aAAcC,EAAwBvB,EAAxBuB,OAAQC,EAAgBxB,EAAhBwB,YALvB,kBAMjB,CAAEJ,MAAAA,EAAOC,SAAAA,EAAUC,aAAAA,EAAcC,OAAAA,EAAQC,YAAAA,IANxB,2CAAH,sDASVC,EAAU,mCAAG,WAAMN,GAAN,uFACDN,IAAAA,IAAA,iBACXM,EADW,4BACWL,EADX,oBADC,cAClBE,EADkB,yBAKjBA,EAAShB,KAAK0B,MALG,2CAAH,sDAQVC,EAAU,mCAAG,WAAMR,GAAN,uFACDN,IAAAA,IAAA,iBACXM,EADW,4BACWL,EADX,2BADC,cAClBE,EADkB,yBAKjBA,EAAShB,KAAKiB,SALG,2CAAH,qD","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar, MoviesList, notify } from 'components';\nimport { Container } from './Movies.styled';\nimport { getMovies } from 'service';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getMovies(query)\n      .then(data => {\n        setMovies(data);\n        if (data.length === 0) {\n          notify(`There is no result on query: ${query}`);\n        }\n      })\n      .catch(error => console.log(error.message));\n  }, [query]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <Container>\n      <SearchBar onSubmit={handleSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </Container>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst apiKey = '4f7db32deafa46415b96d8eae8667c0e';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${apiKey}`);\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${apiKey}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${apiKey}&language=en-US`\n  );\n  const data = await response.data;\n  const { title, overview, vote_average, genres, poster_path } = data;\n  return { title, overview, vote_average, genres, poster_path };\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n"],"names":["Container","styled","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovies","then","data","length","notify","catch","error","console","log","message","onSubmit","window","scrollTo","top","behavior","axios","apiKey","getTrending","response","results","getDetails","id","title","overview","vote_average","genres","poster_path","getCredits","cast","getReviews"],"sourceRoot":""}